
const TelegramBot = require('node-telegram-bot-api');
const config = require('config');
const express = require('express');
const fs = require('fs')
const app = express();
const webAppUrl = 'https://total-geek.ru'
const rublePhotoPath = './imgs/ruble_image.jpg'
const rublePhoto = fs.readFileSync(rublePhotoPath)
const CNYPhotoPath = './imgs/CNYimg.jpg'
const CNYPhoto = fs.readFileSync(CNYPhotoPath)

const token = config.get('TELEGRAM_TOKEN');
let chatId;
let calcFlag = false;

const bot = new TelegramBot(token, { polling: true });

function CNYCalculation(message) {
    let messageInCNY = message / 12.75
    let additionalAmount = 0;

    if (messageInCNY > 200 && messageInCNY < 500) {
        additionalAmount = 3000 / 12.75;
    } else if (messageInCNY >= 500 && messageInCNY < 1000) {
        additionalAmount = 4000 / 12.75;
    }

    return (parseFloat(messageInCNY + additionalAmount)) ;
}


bot.on('message', async (msg) => {
    chatId = msg.chat.id;
    const text = msg.text;

    if (calcFlag) {
        const message = msg.text;
        const messageNumber = CNYCalculation(message)
        await bot.sendPhoto(chatId, CNYPhoto)
        await bot.sendMessage(chatId, messageNumber.toFixed(2) + ' CNY');
        calcFlag = false;
    }

    switch (text) {
        case '–ó–ê–ö–ê–ó–ê–¢–¨ –° POIZON':
            await bot.sendMessage(msg.from.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ RUB \u2192');
            await bot.sendPhoto(msg.from.id, rublePhoto)
            await bot.sendMessage(msg.from.id, '–§–æ—Ä–º—É–ª–∞ –∑–¥–µ—Å—å-->');
            calcFlag = true;
            break;
        default:
            break;
    }

    if (text === '/start') {
        await bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ Rain Zone Bot!\n–ü–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–¥–µ–∂–¥—É –∏ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑ RUB –≤ CNY, –≤—ã–±–µ—Ä–∏, —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å!\nPS: –ï—Å–ª–∏ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ —É –Ω–∞—Å –≤ –Ω–∞–ª–∏—á–∏–∏, —Ç–æ –∂–º–∏ –±–æ–ª—å—à—É—é –∫–Ω–æ–ø–∫—É "–û–§–û–†–ú–ò–¢–¨ –ó–ê–ö–ê–ó" –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞ \n –ï–ª—Å–∏ —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å –ø—Ä—è–º–æ —Å  POIZON –∂–º–∏ –∫–Ω–æ–ø–∫—É "–ó–ê–ö–ê–ó–ê–¢–¨ –° POIZON"', {
            reply_markup: {
                inline_keyboard: [

                ],
                keyboard : [
                    [{text: '‚úÖ –û–§–û–†–ú–ò–¢–¨ –ó–ê–ö–ê–ó üëü', web_app: {url: webAppUrl}}],
                    [{ text: '–ó–ê–ö–ê–ó–ê–¢–¨ –° POIZON'}],
                ]
            },
        });

    }
    if(msg?.web_app_data?.data){
        try{
            const data = JSON.parse(msg?.web_app_data?.data)
            await  bot.sendMessage(chatId, '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å')
            await  bot.sendMessage(chatId, data?.title)
            await  bot.sendMessage(chatId, data?.price)
        } catch (e) {
            console.log(e)
        }

    }
});



